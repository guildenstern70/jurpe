/**
J.U.R.P.E. @version@ Swing Demo
Copyright (C) 2002-12 LittleLite Software

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

 */
package net.littlelite.jurpedemo.frames.panels;

import net.littlelite.jurpe.dungeon.hexmap.IPanelTemplate;
import net.littlelite.jurpe.system.Core;
import net.littlelite.jurpe.system.resources.ResourceFinder;
import net.littlelite.jurpedemo.JurpeDemoConfig;
import net.littlelite.jurpedemo.frames.JurpeMain;

/**
 * Base class for all tabs in the game
 * 
 */
public class JPanelTemplate extends javax.swing.JPanel implements IPanelTemplate
{

    private static final long serialVersionUID = 2L;
    protected JurpeMain parentGUI;
    protected Core theSystem;
    protected ResourceFinder rf;

    /**
     * 
     */
    public JPanelTemplate(JurpeMain gui)
    {
        this.parentGUI = gui;
        this.theSystem = this.getGUI().getSystem();

        initComponents();
        this.setPanelDimension();

        // Resources
        this.rf = ResourceFinder.resources();
        this.setDoubleBuffered(true);

        // Form on show event
        addComponentListener(new java.awt.event.ComponentAdapter()
        {

            @Override
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                formComponentShown(evt);
            }
        });
    }

    /**
     * Call refresh every doLayout
     */
    @Override
    public void doLayout()
    {
        this.refresh();
        super.doLayout();
    }

    protected void formComponentShown(java.awt.event.ComponentEvent evt)
    {
        return;
    }

    /**
     * Refresh abstract method
     * 
     */
    public void refresh()
    {
        // do nothing
    }

    /**
     * @return the parentGUI
     */
    public JurpeMain getGUI()
    {
        return parentGUI;
    }

    protected void setPanelDimension()
    {
        this.setMinimumSize(JurpeDemoConfig.PANELSIZE);
        this.setMaximumSize(JurpeDemoConfig.PANELSIZE);
        this.setPreferredSize(JurpeDemoConfig.PANELSIZE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{

		setMaximumSize(new java.awt.Dimension(490, 371));
		setMinimumSize(new java.awt.Dimension(490, 371));
		setPreferredSize(new java.awt.Dimension(490, 371));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 490, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 371, Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents
	// Variables declaration - do not modify//GEN-BEGIN:variables
	// End of variables declaration//GEN-END:variables
}
